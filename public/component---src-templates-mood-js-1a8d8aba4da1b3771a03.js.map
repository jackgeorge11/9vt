{"version":3,"file":"component---src-templates-mood-js-1a8d8aba4da1b3771a03.js","mappings":"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","sources":["webpack://9vtbackslash5/./src/components/Product.js","webpack://9vtbackslash5/./src/templates/Mood.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport Layout from \"./Layout\";\nimport Window from \"./Window\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport { ColorContext } from \"../contexts/ColorContext\";\nimport { Link } from \"gatsby\";\nimport BreadCrumbs from \"./BreadCrumbs\";\n\nconst isBrowser = typeof window !== \"undefined\";\n\nexport default function Product({\n  children,\n  src,\n  alt,\n  title,\n  description,\n  canonical,\n  additional,\n  scroller,\n  crumbs,\n}) {\n  const { color } = useContext(ColorContext);\n\n  const [path, setPath] = useState(undefined);\n  const [hash, setHash] = useState(undefined);\n\n  let _path = undefined;\n  let _hash = undefined;\n\n  if (isBrowser) {\n    _path = window.location.pathname;\n    _hash = window.location.hash;\n  }\n\n  useEffect(() => {\n    setPath(_path);\n    setHash(_hash);\n  }, [_path, _hash]);\n\n  if (hash) {\n    return (\n      <div className=\"zoom\" style={{ backgroundColor: color }}>\n        <div className=\"image\">\n          <GatsbyImage image={src} alt={alt} />\n        </div>\n        <div className=\"back\">\n          <h2>\n            <Link className=\"thick under pointer\" to={path}>\n              click here\n            </Link>{\" \"}\n            to go back to the details.\n          </h2>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <Layout\n        page=\"catalogue\"\n        title={title}\n        description={description}\n        canonical={canonical}\n        additional={additional}\n      >\n        <main className=\"product\">\n          <Link className=\"image image-desktop pointer\" to={`${path}#zoom`}>\n            <GatsbyImage image={src} alt={alt} />\n          </Link>\n          <div className=\"product-window-wrapper\">\n            <BreadCrumbs crumbs={crumbs} className={\"small\"} />\n            <Window className=\"small\" scroller={scroller} article={true}>\n              {children}\n            </Window>\n          </div>\n        </main>\n      </Layout>\n    );\n  }\n}\n","import React from \"react\";\nimport Product from \"../components/Product\";\nimport { graphql, Link } from \"gatsby\";\nimport { renderRichText } from \"gatsby-source-contentful/rich-text\";\nimport { BLOCKS, MARKS } from \"@contentful/rich-text-types\";\nimport { getImage } from \"gatsby-plugin-image\";\n\nexport const query = graphql`\n  query ($slug: String!, $collectionSlug: String!) {\n    allContentfulMood(filter: { slug: { eq: $slug } }) {\n      nodes {\n        isSold\n        photo {\n          gatsbyImageData(placeholder: DOMINANT_COLOR)\n        }\n        price\n        slug\n        title\n        medium\n        size\n      }\n    }\n    allContentfulMoodsCollection(filter: { slug: { eq: $collectionSlug } }) {\n      nodes {\n        releaseDate(formatString: \"MMMM YYYY\")\n        artist\n        slug\n        description {\n          raw\n        }\n        saleEnded\n      }\n    }\n  }\n`;\n\nconst Bold = ({ children }) => <span className=\"bold\">{children}</span>;\nconst Text = ({ children }) => <p className=\"align-center\">{children}</p>;\n\nconst options = {\n  renderMark: {\n    [MARKS.BOLD]: (text) => <Bold>{text}</Bold>,\n  },\n  renderNode: {\n    [BLOCKS.PARAGRAPH]: (node, children) => <Text>{children}</Text>,\n    [BLOCKS.EMBEDDED_ASSET]: (node) => {\n      return (\n        <>\n          <h2>Embedded Asset</h2>\n          <pre>\n            <code>{JSON.stringify(node, null, 2)}</code>\n          </pre>\n        </>\n      );\n    },\n  },\n};\n\nexport default function Mood({ data }) {\n  const mood = data.allContentfulMood?.nodes?.[0];\n  const collection = data.allContentfulMoodsCollection?.nodes?.[0];\n\n  const src = getImage(mood?.photo);\n\n  const description = mood.description;\n  const collectionDescription = collection.description;\n\n  return (\n    <Product\n      src={src}\n      alt={mood.title}\n      title={mood.title}\n      description={`${mood.title} from ${mood.artist}'s Moods collection.`}\n      canonical={`${collection.slug}/${mood.slug}`}\n      crumbs={[\n        { title: \"catalogue\", slug: \"/catalogue\" },\n        { title: \"Moods\", slug: `/catalogue/moods/${collection.slug}` },\n        {\n          title: collection.artist,\n          slug: `/catalogue/moods/${collection.slug}`,\n        },\n        {\n          title: mood.title,\n          slug: `/catalogue/moods/${collection.slug}/${mood.slug}`,\n        },\n      ]}\n    >\n      <h1 className=\"italic title\">{mood.title}</h1>\n      <h2 className=\"--muted ta-right author\">by {collection.artist}</h2>\n      {description && renderRichText(description, options)}\n      {collectionDescription && renderRichText(collectionDescription, options)}\n      <h2 className=\"--muted\">{mood.isSold && \"this piece is sold.\"}</h2>\n      <h2 className=\"--muted\">\n        {collection.saleEnded && \"sale has ended for this collection.\"}\n      </h2>\n      <h2>\n        <Link to={`/catalogue/moods/${collection.slug}`}>click here</Link> to go\n        back to the collection, or <Link to=\"/catalogue\">click here</Link> to go\n        back to our catalogue.\n      </h2>\n      <h1>details</h1>\n      {mood.price && <h2 className=\"m-0\">{`$${mood.price}`}</h2>}\n      {mood.medium && <h2 className=\"m-0\">{mood.medium}</h2>}\n      {mood.size && <h2 className=\"m-0\">{mood.size}</h2>}\n      <h2 className=\"ta-right\">\n        <Link to={`/catalogue/moods/${collection.slug}`}>click here</Link> to go\n        back to the collection.\n      </h2>\n      <h2 className=\"ta-right\">\n        or <Link to=\"/catalogue\">click here</Link> to navigate back to our\n        catalogue.\n      </h2>\n    </Product>\n  );\n}\n"],"names":["isBrowser","window","Product","_ref","children","src","alt","title","description","canonical","additional","scroller","crumbs","color","useContext","ColorContext","_useState","useState","undefined","path","setPath","_useState2","hash","setHash","_path","_hash","location","pathname","useEffect","React","className","style","backgroundColor","GatsbyImage","image","Link","to","Layout","page","BreadCrumbs","Window","article","Bold","Text","_ref2","options","renderMark","_renderMark","MARKS","text","renderNode","_renderNode","BLOCKS","node","JSON","stringify","Mood","_ref3","_data$allContentfulMo","_data$allContentfulMo2","_data$allContentfulMo3","_data$allContentfulMo4","data","mood","allContentfulMood","nodes","collection","allContentfulMoodsCollection","getImage","photo","collectionDescription","artist","slug","renderRichText","isSold","saleEnded","price","medium","size"],"sourceRoot":""}