{"version":3,"file":"component---src-templates-mood-js-1e435a206411cc5aeb46.js","mappings":"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","sources":["webpack://9vtbackslash5/./src/components/Product.js","webpack://9vtbackslash5/./src/templates/Mood.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport Layout from \"./Layout\";\nimport Window from \"./Window\";\nimport { GatsbyImage, StaticImage } from \"gatsby-plugin-image\";\nimport { ColorContext } from \"../contexts/ColorContext\";\nimport { Link } from \"gatsby\";\n\nexport default function Product({\n  children,\n  src,\n  alt,\n  title,\n  description,\n  additional,\n}) {\n  const { color } = useContext(ColorContext);\n\n  const [path, setPath] = useState(undefined);\n  const [hash, setHash] = useState(undefined);\n\n  useEffect(() => {\n    setPath(window.location.pathname);\n    setHash(window.location.hash);\n  }, []);\n\n  if (hash) {\n    return (\n      <div className=\"zoom\" style={{ backgroundColor: color }}>\n        <div className=\"image\">\n          <GatsbyImage image={src} alt={alt} />\n        </div>\n        <div className=\"back\">\n          <h2>\n            <Link className=\"thick under pointer\" to={path}>\n              click here\n            </Link>{\" \"}\n            to go back to the details.\n          </h2>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <Layout\n        page=\"catalogue\"\n        title={title}\n        description={description}\n        additional={additional}\n      >\n        <div className=\"product\">\n          <Link className=\"image image-desktop pointer\" to={`${path}#zoom`}>\n            <GatsbyImage image={src} alt={alt} />\n          </Link>\n          <Window className=\"small\">{children}</Window>\n        </div>\n      </Layout>\n    );\n  }\n}\n","import React from \"react\";\nimport Product from \"../components/Product\";\nimport { graphql, Link } from \"gatsby\";\nimport { renderRichText } from \"gatsby-source-contentful/rich-text\";\nimport { BLOCKS, MARKS } from \"@contentful/rich-text-types\";\nimport { getImage } from \"gatsby-plugin-image\";\n\nexport const query = graphql`\n  query ($slug: String!, $collectionSlug: String!) {\n    allContentfulMood(filter: { slug: { eq: $slug } }) {\n      nodes {\n        isSold\n        photo {\n          gatsbyImageData(placeholder: DOMINANT_COLOR)\n        }\n        price\n        slug\n        title\n        medium\n        size\n      }\n    }\n    allContentfulMoodsCollection(filter: { slug: { eq: $collectionSlug } }) {\n      nodes {\n        releaseDate(formatString: \"MMMM YYYY\")\n        artist\n        slug\n        description {\n          raw\n        }\n        saleEnded\n      }\n    }\n  }\n`;\n\nconst Bold = ({ children }) => <span className=\"bold\">{children}</span>;\nconst Text = ({ children }) => <p className=\"align-center\">{children}</p>;\n\nconst options = {\n  renderMark: {\n    [MARKS.BOLD]: (text) => <Bold>{text}</Bold>,\n  },\n  renderNode: {\n    [BLOCKS.PARAGRAPH]: (node, children) => <Text>{children}</Text>,\n    [BLOCKS.EMBEDDED_ASSET]: (node) => {\n      return (\n        <>\n          <h2>Embedded Asset</h2>\n          <pre>\n            <code>{JSON.stringify(node, null, 2)}</code>\n          </pre>\n        </>\n      );\n    },\n  },\n};\n\nexport default function Mood({ data }) {\n  const mood = data.allContentfulMood?.nodes?.[0];\n  const collection = data.allContentfulMoodsCollection?.nodes?.[0];\n\n  const src = getImage(mood?.photo);\n\n  const description = mood.description;\n  const collectionDescription = collection.description;\n\n  return (\n    <Product\n      src={src}\n      alt={mood.title}\n      title={mood.title}\n      description={`${mood.title} from ${mood.artist}'s Moods collection.`}\n    >\n      <h1 className=\"italic title\">{mood.title}</h1>\n      <h2 className=\"--muted ta-right author\">by {collection.artist}</h2>\n      {description && renderRichText(description, options)}\n      {collectionDescription && renderRichText(collectionDescription, options)}\n      <h2 className=\"--muted\">{mood.isSold && \"this piece is sold.\"}</h2>\n      <h2 className=\"--muted\">\n        {collection.saleEnded && \"sale has ended for this collection.\"}\n      </h2>\n      <h2>\n        <Link to={`/catalogue/moods/${collection.slug}`}>click here</Link> to go\n        back to the collection, or <Link to=\"/catalogue\">click here</Link> to go\n        back to our catalogue.\n      </h2>\n      <h1>details</h1>\n      {mood.price && <h2 className=\"m-0\">{`$${mood.price}`}</h2>}\n      {mood.medium && <h2 className=\"m-0\">{mood.medium}</h2>}\n      {mood.size && <h2 className=\"m-0\">{mood.size}</h2>}\n      <h2 className=\"ta-right\">\n        <Link to={`/catalogue/moods/${collection.slug}`}>click here</Link> to go\n        back to the collection.\n      </h2>\n      <h2 className=\"ta-right\">\n        or <Link to=\"/catalogue\">click here</Link> to navigate back to our\n        catalogue.\n      </h2>\n    </Product>\n  );\n}\n"],"names":["Product","children","src","alt","title","description","additional","color","useContext","ColorContext","useState","undefined","path","setPath","hash","setHash","useEffect","window","location","pathname","className","style","backgroundColor","G","image","Link","to","page","Bold","Text","options","renderMark","MARKS","text","renderNode","BLOCKS","node","JSON","stringify","Mood","data","mood","allContentfulMood","nodes","collection","allContentfulMoodsCollection","getImage","photo","collectionDescription","artist","renderRichText","isSold","saleEnded","slug","price","medium","size"],"sourceRoot":""}