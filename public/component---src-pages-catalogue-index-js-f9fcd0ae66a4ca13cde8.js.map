{"version":3,"file":"component---src-pages-catalogue-index-js-f9fcd0ae66a4ca13cde8.js","mappings":"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","sources":["webpack://9vtbackslash5/./src/components/BreadCrumbs.js","webpack://9vtbackslash5/./src/components/Window.js","webpack://9vtbackslash5/./src/pages/catalogue/index.js"],"sourcesContent":["import { Link } from \"gatsby\";\nimport React from \"react\";\n\nfunction BreadCrumbs({ crumbs, className }) {\n  return crumbs && crumbs.length ? (\n    <div className={`breadcrumbs ${className ? className : \"\"}`}>\n      <h4 className=\"--muted\">\n        {crumbs.map((c, i) => (\n          <>\n            {i === crumbs.length - 1 ? (\n              <span className=\"--dark\">{c.title}</span>\n            ) : (\n              <Link to={c.slug} className=\"under --muted\">\n                {c.title}\n              </Link>\n            )}\n            {i !== crumbs.length - 1 && <span className=\"divider\">â€¢</span>}\n          </>\n        ))}\n      </h4>\n    </div>\n  ) : null;\n}\n\nexport default BreadCrumbs;\n","import React, { useContext } from \"react\";\nimport { ColorContext } from \"../contexts/ColorContext\";\nimport BreadCrumbs from \"../components/BreadCrumbs\";\n\nfunction Window({ children, className, scroller, article, crumbs }) {\n  const { color } = useContext(ColorContext);\n\n  return article ? (\n    <>\n      <BreadCrumbs crumbs={crumbs} className={className} />\n      <article\n        className={`window ${className}`}\n        style={{\n          backgroundColor: color,\n        }}\n        ref={scroller}\n      >\n        {children}\n      </article>\n    </>\n  ) : (\n    <>\n      <BreadCrumbs crumbs={crumbs} className={className} />\n      <main\n        className={`window ${className}`}\n        style={{\n          backgroundColor: color,\n        }}\n        ref={scroller}\n      >\n        {children}\n      </main>{\" \"}\n    </>\n  );\n}\n\nexport default Window;\n","import { useStaticQuery, graphql, Link } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport React, { useRef } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport Window from \"../../components/Window\";\nimport moment from \"moment\";\n\nexport default function Index() {\n  const { allContentfulCatalogue } = useStaticQuery(graphql`\n    query MyQuery {\n      allContentfulCatalogue {\n        nodes {\n          items {\n            ... on ContentfulMoodsCollection {\n              moods {\n                photo {\n                  gatsbyImageData(\n                    layout: FIXED\n                    height: 300\n                    placeholder: DOMINANT_COLOR\n                  )\n                  publicUrl\n                }\n              }\n              slug\n              releaseDate\n              artist\n              internal {\n                type\n              }\n            }\n            ... on ContentfulPublication {\n              slug\n              author\n              cover {\n                gatsbyImageData(\n                  layout: FIXED\n                  height: 300\n                  placeholder: DOMINANT_COLOR\n                )\n                height\n                width\n              }\n              releaseDate\n              internal {\n                type\n              }\n              title\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sortCatalogue = (catalogue) => {\n    return catalogue.sort(function (a, b) {\n      return (\n        moment(b.releaseDate).format(\"YYYYMMDD\") -\n        moment(a.releaseDate).format(\"YYYYMMDD\")\n      );\n    });\n  };\n\n  const sortedCatalogue = sortCatalogue(allContentfulCatalogue.nodes[0].items);\n\n  const scroller = useRef();\n\n  return (\n    <div>\n      <Layout\n        page=\"catalogue\"\n        title=\"catalogue\"\n        description=\"discover everything we've put into the world, from books to collections of art.\"\n      >\n        <Window\n          className=\"large catalogue\"\n          scroller={scroller}\n          crumbs={[{ title: \"catalogue\", slug: \"/catalogue\" }]}\n        >\n          <h2\n            className=\"--muted scroll pointer\"\n            onClick={\n              scroller && scroller.current\n                ? () =>\n                    (scroller.current.scrollLeft =\n                      scroller.current.clientWidth / 2)\n                : null\n            }\n          >\n            (scroll -->)\n          </h2>\n          {sortedCatalogue?.map((item, i) => {\n            return (\n              <div className=\"idea\">\n                <Link\n                  to={`/catalogue/${\n                    item.internal.type === \"ContentfulMoodsCollection\"\n                      ? `moods/${item.slug}`\n                      : item.slug\n                  }`}\n                  className=\"cover\"\n                >\n                  <GatsbyImage\n                    image={\n                      item.internal.type === \"ContentfulMoodsCollection\"\n                        ? getImage(item.moods?.[0].photo)\n                        : getImage(item.cover)\n                    }\n                    alt={\n                      item.internal.type === \"ContentfulMoodsCollection\"\n                        ? `Moods by ${item.artist}`\n                        : item.title\n                    }\n                    objectFit=\"contain\"\n                    style={{ maxHeight: \"300px\" }}\n                  />\n                </Link>\n                <div className=\"info\">\n                  <h1 className=\"italic\">\n                    <Link\n                      to={`/catalogue/${\n                        item.internal.type === \"ContentfulMoodsCollection\"\n                          ? `moods/${item.slug}`\n                          : item.slug\n                      }`}\n                    >\n                      {item.internal.type === \"ContentfulMoodsCollection\"\n                        ? \"Moods\"\n                        : item.title}\n                    </Link>\n                  </h1>\n                  <h2>\n                    by{\" \"}\n                    {item.internal.type === \"ContentfulMoodsCollection\"\n                      ? item.artist\n                      : item.author}\n                  </h2>\n                  <h3>{moment(item.releaseDate).format(\"MMM YYYY\")}</h3>\n                </div>\n              </div>\n            );\n          })}\n        </Window>\n      </Layout>\n    </div>\n  );\n}\n"],"names":["_ref","crumbs","className","length","React","map","c","i","title","Link","to","slug","children","scroller","article","color","useContext","ColorContext","BreadCrumbs","style","backgroundColor","ref","Index","allContentfulCatalogue","useStaticQuery","sortedCatalogue","nodes","items","sort","a","b","moment","releaseDate","format","useRef","Layout","page","description","Window","onClick","current","scrollLeft","clientWidth","item","_item$moods","internal","type","GatsbyImage","image","getImage","moods","photo","cover","alt","artist","objectFit","maxHeight","author"],"sourceRoot":""}