{"version":3,"file":"component---src-templates-mood-js-e76983ea749a052ad661.js","mappings":"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","sources":["webpack://9vtbackslash5/./src/components/BreadCrumbs.js","webpack://9vtbackslash5/./src/components/Product.js","webpack://9vtbackslash5/./src/templates/Mood.js"],"sourcesContent":["import { Link } from \"gatsby\";\nimport React from \"react\";\n\nfunction BreadCrumbs({ crumbs, className }) {\n  return crumbs && crumbs.length ? (\n    <div className={`breadcrumbs ${className}`}>\n      <h4 className=\"--muted\">\n        {crumbs.map((c, i) => (\n          <>\n            {i === crumbs.length - 1 ? (\n              <span className=\"--dark\">{c.title}</span>\n            ) : (\n              <Link to={c.slug} className=\"under --muted\">\n                {c.title}\n              </Link>\n            )}\n            {i !== crumbs.length - 1 && <span className=\"divider\">â€¢</span>}\n          </>\n        ))}\n      </h4>\n    </div>\n  ) : null;\n}\n\nexport default BreadCrumbs;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Layout from \"./Layout\";\nimport Window from \"./Window\";\nimport { GatsbyImage, StaticImage } from \"gatsby-plugin-image\";\nimport { ColorContext } from \"../contexts/ColorContext\";\nimport { Link } from \"gatsby\";\nimport BreadCrumbs from \"./BreadCrumbs\";\n\nexport default function Product({\n  children,\n  src,\n  alt,\n  title,\n  description,\n  canonical,\n  additional,\n  scroller,\n  crumbs,\n}) {\n  const { color } = useContext(ColorContext);\n\n  const [path, setPath] = useState(undefined);\n  const [hash, setHash] = useState(undefined);\n\n  useEffect(() => {\n    setPath(window.location.pathname);\n    setHash(window.location.hash);\n  }, []);\n\n  if (hash) {\n    return (\n      <div className=\"zoom\" style={{ backgroundColor: color }}>\n        <div className=\"image\">\n          <GatsbyImage image={src} alt={alt} />\n        </div>\n        <div className=\"back\">\n          <h2>\n            <Link className=\"thick under pointer\" to={path}>\n              click here\n            </Link>{\" \"}\n            to go back to the details.\n          </h2>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <Layout\n        page=\"catalogue\"\n        title={title}\n        description={description}\n        canonical={canonical}\n        additional={additional}\n      >\n        <main className=\"product\">\n          <Link className=\"image image-desktop pointer\" to={`${path}#zoom`}>\n            <GatsbyImage image={src} alt={alt} />\n          </Link>\n          <div className=\"product-window-wrapper\">\n            <BreadCrumbs crumbs={crumbs} className={\"small\"} />\n            <Window className=\"small\" scroller={scroller} article={true}>\n              {children}\n            </Window>\n          </div>\n        </main>\n      </Layout>\n    );\n  }\n}\n","import React from \"react\";\nimport Product from \"../components/Product\";\nimport { graphql, Link } from \"gatsby\";\nimport { renderRichText } from \"gatsby-source-contentful/rich-text\";\nimport { BLOCKS, MARKS } from \"@contentful/rich-text-types\";\nimport { getImage } from \"gatsby-plugin-image\";\n\nexport const query = graphql`\n  query ($slug: String!, $collectionSlug: String!) {\n    allContentfulMood(filter: { slug: { eq: $slug } }) {\n      nodes {\n        isSold\n        photo {\n          gatsbyImageData(placeholder: DOMINANT_COLOR)\n        }\n        price\n        slug\n        title\n        medium\n        size\n      }\n    }\n    allContentfulMoodsCollection(filter: { slug: { eq: $collectionSlug } }) {\n      nodes {\n        releaseDate(formatString: \"MMMM YYYY\")\n        artist\n        slug\n        description {\n          raw\n        }\n        saleEnded\n      }\n    }\n  }\n`;\n\nconst Bold = ({ children }) => <span className=\"bold\">{children}</span>;\nconst Text = ({ children }) => <p className=\"align-center\">{children}</p>;\n\nconst options = {\n  renderMark: {\n    [MARKS.BOLD]: (text) => <Bold>{text}</Bold>,\n  },\n  renderNode: {\n    [BLOCKS.PARAGRAPH]: (node, children) => <Text>{children}</Text>,\n    [BLOCKS.EMBEDDED_ASSET]: (node) => {\n      return (\n        <>\n          <h2>Embedded Asset</h2>\n          <pre>\n            <code>{JSON.stringify(node, null, 2)}</code>\n          </pre>\n        </>\n      );\n    },\n  },\n};\n\nexport default function Mood({ data }) {\n  const mood = data.allContentfulMood?.nodes?.[0];\n  const collection = data.allContentfulMoodsCollection?.nodes?.[0];\n\n  const src = getImage(mood?.photo);\n\n  const description = mood.description;\n  const collectionDescription = collection.description;\n\n  return (\n    <Product\n      src={src}\n      alt={mood.title}\n      title={mood.title}\n      description={`${mood.title} from ${mood.artist}'s Moods collection.`}\n      canonical={`${collection.slug}/${mood.slug}`}\n      crumbs={[\n        { title: \"catalogue\", slug: \"/catalogue\" },\n        { title: \"Moods\", slug: `/catalogue/moods/${collection.slug}` },\n        {\n          title: collection.artist,\n          slug: `/catalogue/moods/${collection.slug}`,\n        },\n        {\n          title: mood.title,\n          slug: `/catalogue/moods/${collection.slug}/${mood.slug}`,\n        },\n      ]}\n    >\n      <h1 className=\"italic title\">{mood.title}</h1>\n      <h2 className=\"--muted ta-right author\">by {collection.artist}</h2>\n      {description && renderRichText(description, options)}\n      {collectionDescription && renderRichText(collectionDescription, options)}\n      <h2 className=\"--muted\">{mood.isSold && \"this piece is sold.\"}</h2>\n      <h2 className=\"--muted\">\n        {collection.saleEnded && \"sale has ended for this collection.\"}\n      </h2>\n      <h2>\n        <Link to={`/catalogue/moods/${collection.slug}`}>click here</Link> to go\n        back to the collection, or <Link to=\"/catalogue\">click here</Link> to go\n        back to our catalogue.\n      </h2>\n      <h1>details</h1>\n      {mood.price && <h2 className=\"m-0\">{`$${mood.price}`}</h2>}\n      {mood.medium && <h2 className=\"m-0\">{mood.medium}</h2>}\n      {mood.size && <h2 className=\"m-0\">{mood.size}</h2>}\n      <h2 className=\"ta-right\">\n        <Link to={`/catalogue/moods/${collection.slug}`}>click here</Link> to go\n        back to the collection.\n      </h2>\n      <h2 className=\"ta-right\">\n        or <Link to=\"/catalogue\">click here</Link> to navigate back to our\n        catalogue.\n      </h2>\n    </Product>\n  );\n}\n"],"names":["crumbs","className","length","map","c","i","title","Link","to","slug","Product","children","src","alt","description","canonical","additional","scroller","color","useContext","ColorContext","useState","undefined","path","setPath","hash","setHash","useEffect","window","location","pathname","style","backgroundColor","G","image","Layout","page","Window","article","Bold","Text","options","renderMark","MARKS","text","renderNode","BLOCKS","node","JSON","stringify","Mood","data","mood","allContentfulMood","nodes","collection","allContentfulMoodsCollection","getImage","photo","collectionDescription","artist","renderRichText","isSold","saleEnded","price","medium","size"],"sourceRoot":""}